<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.my.blog.website.dao.CommentVoMapper">
  <resultMap id="BaseResultMap" type="com.my.blog.website.modal.Vo.CommentVo">
    <id column="coid" jdbcType="INTEGER" property="coid" />
    <result column="cid" jdbcType="INTEGER" property="cid" />
    <result column="created" jdbcType="INTEGER" property="created" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="author_id" jdbcType="INTEGER" property="authorId" />
    <result column="owner_id" jdbcType="INTEGER" property="ownerId" />
    <result column="mail" jdbcType="VARCHAR" property="mail" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="agent" jdbcType="VARCHAR" property="agent" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="parent" jdbcType="INTEGER" property="parent" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.my.blog.website.modal.Vo.CommentVo">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    coid, cid, created, author, author_id, owner_id, mail, url, ip, agent, type, status, 
    parent
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.my.blog.website.modal.Vo.CommentVoExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.my.blog.website.modal.Vo.CommentVoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_comments
    where coid = #{coid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_comments
    where coid = #{coid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.my.blog.website.modal.Vo.CommentVoExample">
    delete from t_comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.my.blog.website.modal.Vo.CommentVo" useGeneratedKeys="true" keyProperty="coid">
    insert into t_comments (coid, cid, created, 
      author, author_id, owner_id, 
      mail, url, ip, agent, 
      type, status, parent, 
      content)
    values (#{coid,jdbcType=INTEGER}, #{cid,jdbcType=INTEGER}, #{created,jdbcType=INTEGER}, 
      #{author,jdbcType=VARCHAR}, #{authorId,jdbcType=INTEGER}, #{ownerId,jdbcType=INTEGER}, 
      #{mail,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, #{agent,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{parent,jdbcType=INTEGER}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.my.blog.website.modal.Vo.CommentVo" useGeneratedKeys="true" keyProperty="coid">
    insert into t_comments
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="coid != null">
        coid,
      </if>
      <if test="cid != null">
        cid,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="authorId != null">
        author_id,
      </if>
      <if test="ownerId != null">
        owner_id,
      </if>
      <if test="mail != null">
        mail,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="agent != null">
        agent,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="parent != null">
        parent,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="coid != null">
        #{coid,jdbcType=INTEGER},
      </if>
      <if test="cid != null">
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        #{created,jdbcType=INTEGER},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="authorId != null">
        #{authorId,jdbcType=INTEGER},
      </if>
      <if test="ownerId != null">
        #{ownerId,jdbcType=INTEGER},
      </if>
      <if test="mail != null">
        #{mail,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="agent != null">
        #{agent,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="parent != null">
        #{parent,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.my.blog.website.modal.Vo.CommentVoExample" resultType="java.lang.Long">
    select count(*) from t_comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_comments
    <set>
      <if test="record.coid != null">
        coid = #{record.coid,jdbcType=INTEGER},
      </if>
      <if test="record.cid != null">
        cid = #{record.cid,jdbcType=INTEGER},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=INTEGER},
      </if>
      <if test="record.author != null">
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.authorId != null">
        author_id = #{record.authorId,jdbcType=INTEGER},
      </if>
      <if test="record.ownerId != null">
        owner_id = #{record.ownerId,jdbcType=INTEGER},
      </if>
      <if test="record.mail != null">
        mail = #{record.mail,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.agent != null">
        agent = #{record.agent,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.parent != null">
        parent = #{record.parent,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update t_comments
    set coid = #{record.coid,jdbcType=INTEGER},
      cid = #{record.cid,jdbcType=INTEGER},
      created = #{record.created,jdbcType=INTEGER},
      author = #{record.author,jdbcType=VARCHAR},
      author_id = #{record.authorId,jdbcType=INTEGER},
      owner_id = #{record.ownerId,jdbcType=INTEGER},
      mail = #{record.mail,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      ip = #{record.ip,jdbcType=VARCHAR},
      agent = #{record.agent,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      parent = #{record.parent,jdbcType=INTEGER},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_comments
    set coid = #{record.coid,jdbcType=INTEGER},
      cid = #{record.cid,jdbcType=INTEGER},
      created = #{record.created,jdbcType=INTEGER},
      author = #{record.author,jdbcType=VARCHAR},
      author_id = #{record.authorId,jdbcType=INTEGER},
      owner_id = #{record.ownerId,jdbcType=INTEGER},
      mail = #{record.mail,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      ip = #{record.ip,jdbcType=VARCHAR},
      agent = #{record.agent,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      parent = #{record.parent,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.my.blog.website.modal.Vo.CommentVo">
    update t_comments
    <set>
      <if test="cid != null">
        cid = #{cid,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=INTEGER},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="authorId != null">
        author_id = #{authorId,jdbcType=INTEGER},
      </if>
      <if test="ownerId != null">
        owner_id = #{ownerId,jdbcType=INTEGER},
      </if>
      <if test="mail != null">
        mail = #{mail,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="agent != null">
        agent = #{agent,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="parent != null">
        parent = #{parent,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where coid = #{coid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.my.blog.website.modal.Vo.CommentVo">
    update t_comments
    set cid = #{cid,jdbcType=INTEGER},
      created = #{created,jdbcType=INTEGER},
      author = #{author,jdbcType=VARCHAR},
      author_id = #{authorId,jdbcType=INTEGER},
      owner_id = #{ownerId,jdbcType=INTEGER},
      mail = #{mail,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      agent = #{agent,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      parent = #{parent,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where coid = #{coid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.my.blog.website.modal.Vo.CommentVo">
    update t_comments
    set cid = #{cid,jdbcType=INTEGER},
      created = #{created,jdbcType=INTEGER},
      author = #{author,jdbcType=VARCHAR},
      author_id = #{authorId,jdbcType=INTEGER},
      owner_id = #{ownerId,jdbcType=INTEGER},
      mail = #{mail,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      agent = #{agent,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      parent = #{parent,jdbcType=INTEGER}
    where coid = #{coid,jdbcType=INTEGER}
  </update>
</mapper>